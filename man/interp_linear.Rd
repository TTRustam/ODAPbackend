% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolation.R
\name{interp_linear}
\alias{interp_linear}
\title{\code{interp_linear}}
\usage{
interp_linear(
  x,
  y,
  xout = x,
  transform = c("none", "geometric", "logarithmic", "logit")[1],
  extrap = TRUE
)
}
\arguments{
\item{x, y}{numeric vectors giving the coordinates of the points to be interpolated.}

\item{xout}{an optional set of numeric values specifying where interpolation is to take place.}

\item{transform}{character. Default \code{"none"}. Other options \code{"geometric"},\code{"logarithmic"},\code{"logit"}, if the data conforms with these, see details.}

\item{extrap}{logical, Default \code{TRUE}, do we allow extrapolation beyond the range of x? If so, it's constant at the nearest value.}
}
\description{
Perform a linear interpolation using \code{approxfun()}, potentially on a transform of the data. With no transform, we do a direct linear interpolation. For geometric/ logarithmic/ logit, we do a linear interpolation of the square root/ log/ logit of the data, then back transform the result.
}
\details{
For geometric transformations, \code{y} must be non-negative. For logarithmic, \code{y} must be greater than 0, and for logit we require \code{y} values between 0 and 1 (not inclusive). Direct linear extrapolation could extend into negative values, but the other options do not. Geometric interpolation may perform poorly if extrapolating beyond the tails. logit interpolation can also behave awkward in the tails. Logarithmic is behaves quite well for most demography applications.
}
\examples{

x <- seq(18,36,by=3)
y <- c(100, 2267, 7914, 14540, 21261, 28700, 36647)
ylogit <- y / (max(y)+100)

xout <- 10:40
\dontrun{
plot(x,y,xlim=c(10,40),ylim=c(-5000,50000))
lines(xout, interp_linear(x,y,xout,"none"), col = "#202020", lty = "35")
lines(xout, interp_linear(x,y,xout,"geometric"), col = "#FF0000", lty = "53",lwd=2)
lines(xout, interp_linear(x,y,xout,"logarithmic"), col = "#0000FF", lty = "82",lwd=1)
}
\dontrun{
  plot(x,ylogit,xlim=c(10,40))
  lines(xout, interp_linear(x,y=ylogit,xout,"none"), col = "#202020", lty = "35")
  lines(xout, interp_linear(x,y=ylogit,xout,"logit"), col = "#FF0000", lty = "53",lwd=2)
}

}
